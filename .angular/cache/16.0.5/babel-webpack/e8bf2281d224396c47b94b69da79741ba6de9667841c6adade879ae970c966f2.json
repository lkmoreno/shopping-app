{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction ImgComponent_img_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"img\", 2);\n    i0.ɵɵlistener(\"load\", function ImgComponent_img_0_Template_img_load_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.imgLoaded());\n    })(\"error\", function ImgComponent_img_0_Template_img_error_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.imgError());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r0.img, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction ImgComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r2.imageDefault, i0.ɵɵsanitizeUrl);\n  }\n}\nclass ImgComponent {\n  constructor() {\n    this.img = '';\n    this.loaded = new EventEmitter();\n    this.imageDefault = './assets/images/default.png';\n    this.counter = 0;\n    //before render no correr cosas asincronas y el constructor corre una sola vez\n    console.log('constructor', 'imgvalue', this.img);\n  }\n  ngOnChanges() {\n    //antes  y durante del render\n    // estar actualizando los cambios en los inputs -- puede correr las veces que se cambie\n    console.log('ngOnchanges', 'imgvalue', this.img);\n  }\n  ngOnInit() {\n    //antes del render\n    // aqui se pueden correr cosas asincronas ejem fetch, llamados api y se corre una sola vez\n    console.log('ngOnInit', 'imgvalue', this.img);\n    window.setInterval(() => {\n      this.counter += 1;\n      console.log('counter');\n    }, 1000);\n  }\n  ngAfterViewInit() {\n    //despues del render\n    // aqui se manejan los componentes hijos\n    console.log('ngAfterViewInit');\n  }\n  ngOnDestroy() {\n    //cuando se elimina el componente\n    console.log('ngOnDestroy');\n  }\n  imgError() {\n    this.img = this.imageDefault;\n  }\n  imgLoaded() {\n    console.log('log hijo');\n    this.loaded.emit(this.img);\n  }\n}\nImgComponent.ɵfac = function ImgComponent_Factory(t) {\n  return new (t || ImgComponent)();\n};\nImgComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ImgComponent,\n  selectors: [[\"app-img\"]],\n  inputs: {\n    img: \"img\"\n  },\n  outputs: {\n    loaded: \"loaded\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 3,\n  consts: [[\"width\", \"200\", 3, \"src\", \"load\", \"error\", 4, \"ngIf\", \"ngIfElse\"], [\"elseImage\", \"\"], [\"width\", \"200\", 3, \"src\", \"load\", \"error\"], [3, \"src\"]],\n  template: function ImgComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ImgComponent_img_0_Template, 1, 1, \"img\", 0);\n      i0.ɵɵelementStart(1, \"h3\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, ImgComponent_ng_template_3_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.img)(\"ngIfElse\", _r1);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.counter);\n    }\n  },\n  dependencies: [i1.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ImgComponent };","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵlistener","ImgComponent_img_0_Template_img_load_0_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","imgLoaded","ImgComponent_img_0_Template_img_error_0_listener","ctx_r5","imgError","ɵɵelementEnd","ɵɵproperty","ctx_r0","img","ɵɵsanitizeUrl","ɵɵelement","ctx_r2","imageDefault","ImgComponent","constructor","loaded","counter","console","log","ngOnChanges","ngOnInit","window","setInterval","ngAfterViewInit","ngOnDestroy","emit","selectors","inputs","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","ImgComponent_Template","rf","ctx","ɵɵtemplate","ImgComponent_img_0_Template","ɵɵtext","ImgComponent_ng_template_3_Template","ɵɵtemplateRefExtractor","_r1","ɵɵadvance","ɵɵtextInterpolate"],"sources":["/home/lmoreno/Desktop/Cursos/CursosAngular/my-store/src/app/components/img/img.component.ts","/home/lmoreno/Desktop/Cursos/CursosAngular/my-store/src/app/components/img/img.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter, OnChanges, OnInit, AfterViewInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-img',\n  templateUrl: './img.component.html',\n  styleUrls: ['./img.component.scss']\n})\nexport class ImgComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n\n  @Input() img: string = '';\n  @Output() loaded = new EventEmitter<string>();\n  imageDefault = './assets/images/default.png';\n  counter = 0;\n  constructor() {\n    //before render no correr cosas asincronas y el constructor corre una sola vez\n    console.log('constructor', 'imgvalue', this.img)\n  }\n\n  ngOnChanges() {\n    //antes  y durante del render\n    // estar actualizando los cambios en los inputs -- puede correr las veces que se cambie\n    console.log('ngOnchanges', 'imgvalue', this.img)\n  }\n\n  ngOnInit(): void {\n    //antes del render\n    // aqui se pueden correr cosas asincronas ejem fetch, llamados api y se corre una sola vez\n    console.log('ngOnInit', 'imgvalue', this.img)\n    window.setInterval(() => {\n      this.counter += 1;\n      console.log('counter')\n    }, 1000)\n\n  }\n  ngAfterViewInit(): void {\n    //despues del render\n    // aqui se manejan los componentes hijos\n    console.log('ngAfterViewInit')\n\n  }\n  ngOnDestroy(): void {\n    //cuando se elimina el componente\n    console.log('ngOnDestroy')\n\n  }\n  imgError() {\n    this.img = this.imageDefault;\n  }\n  imgLoaded() {\n    console.log('log hijo')\n    this.loaded.emit(this.img);\n  }\n\n}\n","<img width=\"200\" (load)=\"imgLoaded()\" [src]=\"img\" (error)=\"imgError()\" *ngIf=\"img; else elseImage\">\n<h3>{{counter}}</h3>\n\n<ng-template #elseImage>\n  <img [src]=\"imageDefault\" />\n</ng-template>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}